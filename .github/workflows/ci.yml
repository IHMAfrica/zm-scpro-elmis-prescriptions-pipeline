name: CI Build and Publish JAR Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# env:
  # No container registry is needed; we publish the JAR as a GitHub Release asset.

jobs:
  build-and-publish-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build fat jar
        run: ./gradlew --no-daemon clean shadowJar

      - name: Resolve artifact name
        id: vars
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=latest" >> $GITHUB_OUTPUT
          echo "JAR_PATH=build/libs/zm-scpro-elmis-prescriptions-pipeline-all.jar" >> $GITHUB_OUTPUT

      - name: Create Git tag (lightweight) for this build
        id: tag
        run: |
          echo "TAG=latest" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          name: Release ${{ steps.tag.outputs.TAG }}
          draft: false
          prerelease: false
          files: |
            ${{ steps.vars.outputs.JAR_PATH }}

      - name: Prepare k8s manifests artifact
        env:
          REPO: ${{ github.repository }}
        run: |
          TAG=${{ steps.tag.outputs.TAG }}
          # Use GitHub release asset URL pattern. Note: for private repos, a token is required by the Operator.
          JAR_URL="https://github.com/${REPO}/releases/download/${TAG}/$(basename ${{ steps.vars.outputs.JAR_PATH }})"
          sed -e "s#JAR_HTTP_URL#${JAR_URL}#g" \
              k8s/fleet/flink-sessionjob.yaml > k8s/fleet/flink-sessionjob.resolved.yaml

      - name: Upload manifests artifact
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: |
            k8s/fleet/*.yaml
